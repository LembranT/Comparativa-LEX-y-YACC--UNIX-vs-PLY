
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'INTEGER MINUS PLUS PRINT SEMIstatement : PRINT expr SEMIexpr : expr PLUS expr\n            | expr MINUS expr\n            | INTEGER'
    
_lr_action_items = {'PRINT':([0,],[2,]),'$end':([1,5,],[0,-1,]),'INTEGER':([2,6,7,],[4,4,4,]),'SEMI':([3,4,8,9,],[5,-4,-2,-3,]),'PLUS':([3,4,8,9,],[6,-4,6,6,]),'MINUS':([3,4,8,9,],[7,-4,7,7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expr':([2,6,7,],[3,8,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> PRINT expr SEMI','statement',3,'p_statement_print','myparser.py',6),
  ('expr -> expr PLUS expr','expr',3,'p_expr','myparser.py',10),
  ('expr -> expr MINUS expr','expr',3,'p_expr','myparser.py',11),
  ('expr -> INTEGER','expr',1,'p_expr','myparser.py',12),
]
